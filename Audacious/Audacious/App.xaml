<Application
    x:Class="Audacious.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit" 
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone" 
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" 
    xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006">

    <!--Application Resources-->
    <Application.Resources>
        <local:LocalizedStrings xmlns:local="clr-namespace:Audacious" x:Key="LocalizedStrings" />
        <SolidColorBrush x:Key="AppPageBackground" Color="White" />
        <SolidColorBrush x:Key="AppPageForeground" Color="Black" />
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource AppPageForeground}" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="{StaticResource AppPageBackground}" />
        </Style>
        <Style x:Key="AppTextNormalStyle" BasedOn="{StaticResource PhoneTextSubtleStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <Style x:Key="AppTextSubtleStyle" BasedOn="{StaticResource PhoneTextSubtleStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <Style x:Key="AppTextTitle1Style" BasedOn="{StaticResource PhoneTextTitle1Style}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <Style x:Key="AppTextTitle2Style" BasedOn="{StaticResource PhoneTextTitle2Style}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <Style x:Key="AppTextTitle3Style" BasedOn="{StaticResource PhoneTextTitle3Style}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <Style x:Key="AppTextSmallStyle" BasedOn="{StaticResource PhoneTextSmallStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <Style x:Key="AppTextLargeStyle" BasedOn="{StaticResource PhoneTextLargeStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <Style x:Key="AppTextExtraLargeStyle" BasedOn="{StaticResource PhoneTextExtraLargeStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <Style x:Key="AppTextGroupHeaderStyle" BasedOn="{StaticResource PhoneTextGroupHeaderStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <Style x:Key="AppTextContrastStyle" BasedOn="{StaticResource PhoneTextContrastStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <Style x:Key="AppTextAccentStyle" BasedOn="{StaticResource PhoneTextAccentStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <Style x:Key="AppTextHugeStyle" BasedOn="{StaticResource PhoneTextHugeStyle}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black">
            </Setter>
        </Style>
        <!--Button-->
        <SolidColorBrush x:Key="ButtonBackgroundThemeBrush" Color="#B3B6B6B6" />
        <SolidColorBrush x:Key="ButtonBorderThemeBrush" Color="#33000000" />
        <SolidColorBrush x:Key="ButtonDisabledBackgroundThemeBrush" Color="#66CACACA" />
        <SolidColorBrush x:Key="ButtonDisabledBorderThemeBrush" Color="#1A000000" />
        <SolidColorBrush x:Key="ButtonDisabledForegroundThemeBrush" Color="#66000000" />
        <SolidColorBrush x:Key="ButtonForegroundThemeBrush" Color="#FF000000" />
        <SolidColorBrush x:Key="ButtonPointerOverBackgroundThemeBrush" Color="#D1CDCDCD" />
        <SolidColorBrush x:Key="ButtonPointerOverForegroundThemeBrush" Color="#FF000000" />
        <SolidColorBrush x:Key="ButtonPressedBackgroundThemeBrush" Color="#FF000000" />
        <SolidColorBrush x:Key="ButtonPressedForegroundThemeBrush" Color="#FFFFFFFF" />
        <Style x:Key="ScrollViewerStyle1" TargetType="ScrollViewer">
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ScrollStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="00:00:00.5" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Scrolling">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalScrollBar" />
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalScrollBar" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="NotScrolling" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="{TemplateBinding Padding}">
                                <ScrollContentPresenter x:Name="ScrollContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
                                <ScrollBar x:Name="VerticalScrollBar" HorizontalAlignment="Right" Height="Auto" IsHitTestVisible="False" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Opacity="0" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" VerticalAlignment="Stretch" Width="5" Background="{StaticResource PhoneAccentBrush}" />
                                <ScrollBar x:Name="HorizontalScrollBar" HorizontalAlignment="Stretch" Height="5" IsHitTestVisible="False" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Opacity="0" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" VerticalAlignment="Bottom" Width="Auto" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <ScrollViewer x:Name="ScrollViewer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}" Style="{StaticResource ScrollViewerStyle1}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
            <Setter Property="Foreground" Value="{StaticResource PhoneAccentBrush}"/>
            <Setter Property="Background" Value="{StaticResource PhoneProgressBarBackgroundBrush}"/>
            <Setter Property="Maximum" Value="100"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="Padding" Value="{StaticResource PhoneHorizontalMargin}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard Duration="00:00:00" RepeatBehavior="Forever">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IndeterminateRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeterminateRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="DeterminateRoot" Margin="{TemplateBinding Padding}" Visibility="Visible">
                                <Rectangle x:Name="ProgressBarTrack" Fill="{TemplateBinding Background}" Height="4"/>
                                <Rectangle x:Name="ProgressBarIndicator" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="4"/>
                            </Grid>
                            <Border x:Name="IndeterminateRoot" Margin="{TemplateBinding Padding}" Visibility="Collapsed">
                                <Grid x:Name="SliderContainer" IsHitTestVisible="False">
                                    <Grid x:Name="grdLoading" Width="50" Height="50">
                                        <Grid.Triggers>
                                            <EventTrigger RoutedEvent="Image.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:1" 
                                                                         From="0" 
                                                                         To="360"
                                                                         RepeatBehavior="Forever"
                                                                         Storyboard.TargetName="RotatorTransform"
                                                                         Storyboard.TargetProperty="Angle">
                                                            <!--<DoubleAnimation.EasingFunction>
                                                                <CubicEase EasingMode="EaseIn" />
                                                            </DoubleAnimation.EasingFunction>-->
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Grid.Triggers>
                                        <Grid.RenderTransform>
                                            <RotateTransform x:Name="RotatorTransform" CenterX="25" CenterY="25" />
                                        </Grid.RenderTransform>
                                        <Path Stroke="LightGray" StrokeThickness="10"  Data="M 1,0 A 1,1 0 1 0 2,1" Stretch="Fill">
                                            <Path.RenderTransform>
                                                <RotateTransform CenterX="25" CenterY="25" Angle="90"/>
                                            </Path.RenderTransform>
                                        </Path>
                                        <Path Stroke="{StaticResource PhoneAccentBrush}" StrokeThickness="10"  Data="M 1,0 A 1,1 0 1 0 2,1" Stretch="Fill"/>
                                        <Path Stroke="{StaticResource PhoneAccentBrush}" StrokeThickness="10"  Data="M 1,0 A 1,1 0 1 0 2,1" Stretch="Fill">
                                            <Path.RenderTransform>
                                                <RotateTransform CenterX="25" CenterY="25" Angle="0"/>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
    <Application.ApplicationLifetimeObjects>
        <!--Required object that handles lifetime events for the application-->
        <shell:PhoneApplicationService Launching="Application_Launching" Closing="Application_Closing" Activated="Application_Activated" Deactivated="Application_Deactivated" />
    </Application.ApplicationLifetimeObjects>
</Application>